基于Crypto++的简单同步单线程双端通信程序
==========执行流程====================
                       [监听/连接]
                              ||
[监听(等待对方输入信息)/连接(指令模式)]
	              ||
                       [输入模式]
                              ||
                    [等待对方应答]
                              ||
                [收到信息 指令模式]-->循环第二步
==========加密模式=====================
1.AES
AES模式下密钥长度位16位
默认情况下密钥位 "aaaaaaaaaaaaaaaa"

手动设置密钥长度将被截取在前16位 未满16位用 'a' 补齐
如\setkey 123     -----> "123aaaaaaaaaaaaa"
\setkey 12345678901234567890 ----->"1234567890123456"


2.RSA
程序执行后首先查找程序所在目录是否存在私钥
若有则载入私钥并生成相对的公钥([主机名]_PublicKey.key)
无则重新生成私钥([主机名]_PrivateKey.key)

以RSA方式连接目标主机
若目标主机公钥存([目标主机名]_PublicKey.key)]则允许连接
否则作异常处理

每次密文发送前首先发送数字签名
目标主机收到签名验证失败则作异常处理
==========异常处理=====================
1.所有因密钥不同而造成的无法解密作为异常处理
2.RSA模式下连接目标主机 若无法查找到目标主机的公钥作为异常处理
3.数字签名验证失败作为异常处理
4.其他套接字异常
==========指令列表=====================
\listen 监听 等待主机连接

\connect  [参数类型][参数]连接目标主机
-h IP地址 不接受域名 [必要]  
(注:可以用回环地址,不过在RSA模式下会出异常)
-m 加密模式 aes或着rsa 不接受其他参数 [非必要 默认Aes]
-p 后接整数修改端口默认为 5000 端口设置范围(1024,65535)

\? 列出指令

\setkey [参数] 仅可在aes模式下使用 截取16位

\decrypto 将接收到的密文解析成明文

\confirm 停止指令模式 下一次输入流作为明文加密后传输至目标主机